type Student {
    _id: ID!,
    name: String!,
    matriculation: String!,
    digit: String!,
    email: String!,
    chats: [ID]!,
    subjects: [ID]!,
}

type Message {
    _id: ID!,
    value: String!,
    sender: String!
}

type Subject {
    _id: ID!,
    class: String!,
    code: String!,
    name: String!,
    initial: String!,
    messages: [Message!]!
}

# RESPONSES
type Authentication {
    student: Student!,
    session: String!,
    token: String!,
}

type Sync {
    session: String!,
    subscribe: [Subject!]!,
    canSubscribe: [Subject!]!
}

type Response {
    session: String!,
    subjects: [Subject!]!
}

type Responses {
    result: [String]!
}

# ROUTES
type Query {
    test(session: String!): Responses
    subjects: [Subject!]!
    subscribes: [Subject!]!
    messages(chat: ID!): [Message!]!
}

type Mutation {
    login(matricula: String!, digito: String!, senha: String!): Authentication
    subscription(subject: ID!): [Subject!]!
    send(chat: String!, message: String!): [Message!]!
    sync(session: String!): Sync
}